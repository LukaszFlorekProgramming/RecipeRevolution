@page "/reset-password"
@using RecipeRevolutionBlazorApp.Models.User
@using RecipeRevolutionBlazorApp.Services.Users

@inject IUserService UserService
@inject NavigationManager Navigation

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h3>Reset Password</h3>

            <EditForm Model="@resetPasswordDto" OnValidSubmit="ResetPasswordAsync">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="Email">Email</label>
                    <InputText id="Email" @bind-Value="resetPasswordDto.Email" class="form-control" />
                    <ValidationMessage For="@(() => resetPasswordDto.Email)" />
                </div>

                <div class="form-group d-flex justify-content-center mt-3">
                    <button type="submit" class="btn btn-primary">Send Reset Link</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private ResetPasswordDto resetPasswordDto = new ResetPasswordDto();
    private string errorMessage = string.Empty;
    private async Task ResetPasswordAsync()
    {
        try
        {
            var result = await UserService.SendPasswordResetLink(resetPasswordDto);
            if (result)
            {
                Navigation.NavigateTo($"/reset-password-confirm?email={Uri.EscapeDataString(resetPasswordDto.Email)}");
            }

        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }
}
