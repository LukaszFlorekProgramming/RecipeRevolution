@page "/MyRecipes"
@using RecipeRevolutionBlazorApp.Models.Recipe
@using RecipeRevolutionBlazorApp.Services.Recipes
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager


<button class="btn btn-primary mb-4" @onclick="NavigateToAddRecipe">Dodaj Event</button>

<h3>My Recipes</h3>

@if (RecipesResult != null && RecipesResult.Any())
{
    <table class="table table-striped table-bordered bg-light">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Instructions</th>
                <th>PreparationTime</th>
                <th>DifficultyLevel</th>
                <th>Portions</th>
                <th>Modify</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in RecipesResult)
            {
                <tr @onclick="() => NavigateToRecipeDetails(item.RecipeId)">
                    <td>@item.Name</td>
                    <td>@item.Description</td>
                    <td>@item.Instructions</td>
                    <td>@item.PreparationTime</td>
                    <td>@item.DifficultyLevel</td>
                    <td>@item.Portions</td>
                    <td>
                        <button class="btn btn-secondary btn-sm" @onclick="() => NavigateToEditRecipe(item.RecipeId)" @onclick:stopPropagation="true">Modify</button>

                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteRecipe(item.RecipeId)" @onclick:stopPropagation="true">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <p>Loading Events</p>
}

@code {

    private IEnumerable<RecipeDto> RecipesResult;

    protected override async Task OnInitializedAsync()
    {
        RecipesResult = await RecipeService.GetUserRecipes();
    }

    private void NavigateToAddRecipe()
    {
        NavigationManager.NavigateTo("/create-recipe");
    }

    private void NavigateToRecipeDetails(int recipeId)
    {
        NavigationManager.NavigateTo($"/recipe/{recipeId}");
    }

    private void NavigateToEditRecipe(int recipeId)
    {
        NavigationManager.NavigateTo($"/update-recipe/{recipeId}");
    }
    private async Task DeleteRecipe(int recipeId)
    {
        await RecipeService.DeleteRecipe(recipeId);
        RecipesResult = await RecipeService.GetUserRecipes();
        StateHasChanged();
    }

}