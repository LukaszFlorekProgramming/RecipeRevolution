@page "/RecipeByCategory/{Name}"
@using RecipeRevolutionBlazorApp.Models.Recipe
@using RecipeRevolutionBlazorApp.Services.Recipes
@inject IRecipeService IRecipeService
@inject NavigationManager NavigationManager
<PageTitle>Recipe Revolution</PageTitle>
<h3 style="text-align: center;">@Name</h3>


@if (recipesPagedResult != null && recipesPagedResult.Any())
{
    <div class="container">
        <div class="row">
            @foreach (var recipe in recipesPagedResult)
            {
                <div class="col-md-3 mb-4 card-no-border">
                    <div class="card h-100" @onclick="() => RedirectToDetailsPage(recipe.RecipeId)">
                        <img src="@recipe.MainImage" class="card-img-top fixed-size-image" alt="@recipe.Name">
                        <div class="card-body">
                            <h5 class="card-title">@recipe.Name</h5>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>Ładowanie przepisów...</p>
}

@code {
    private IEnumerable<NameAndIMGRecipeDto> recipesPagedResult;
    [Parameter] public string Name { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadRecipes();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadRecipes();
    }

    private async Task LoadRecipes()
    {
        recipesPagedResult = await IRecipeService.GetRecipesByCategory(Name);
    }

    private void RedirectToDetailsPage(int id)
    {
        NavigationManager.NavigateTo($"/recipe/{id}");
    }
}
<style>
    .fixed-size-image {
        width: 300px;
        height: 200px;
        object-fit: cover;
    }
</style>