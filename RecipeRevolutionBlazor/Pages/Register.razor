@page "/register"
@using RecipeRevolutionBlazor.Models;
@using RecipeRevolutionBlazor.Services.Users;
@inject IUserService UserService;
@inject NavigationManager Navigation;


<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-12">
            <h3>Registration</h3>
<EditForm Model="@registerUserDto" OnValidSubmit="RegisterUser">
    <Blazored.FluentValidation.FluentValidationValidator/>
    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="registerUserDto.FirstName" class="form-control" />
        <ValidationMessage For="@(()=> registerUserDto.FirstName)"/>
    </div>

    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="registerUserDto.LastName" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.LastName)" />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="registerUserDto.Email" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Email)" />
    </div>

    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="registerUserDto.Password" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Password)" />
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm Password</label>
        <InputText id="ConfirmPassword" @bind-Value="registerUserDto.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.ConfirmPassword)" />
    </div>

    <div class="form-group">
        <label for="Nationality">Nationality</label>
        <InputText id="Nationality" @bind-Value="registerUserDto.Nationality" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Nationality)" />
    </div>

    <div class="form-group">
        <label for="DateOfBirth">DateOfBirth</label>
        <InputDate id="DateOfBirth" @bind-Value="registerUserDto.DateOfBirth" class="form-control" />
    </div>

    <ValidationSummary></ValidationSummary>

                <div class="form-group d-flex justify-content-center mt-3">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
    </EditForm>
        </div>
    </div>
</div>

@code {
    private RegisterUserDto registerUserDto = new RegisterUserDto();

    private async Task RegisterUser()
    {
        var response = await UserService.RegisterUser(registerUserDto);
        if(response == true)
        {
            Navigation.NavigateTo("/login");
        }
        
    }
}