@page "/register"
@using RecipeRevolutionBlazor.Models;
@using RecipeRevolutionBlazor.Services.Users;
@inject IUserService UserService;
@inject NavigationManager Navigation;

<h3>Registration Form</h3>

<EditForm Model="@registerUserDto" OnValidSubmit="RegisterUser">
    <Blazored.FluentValidation.FluentValidationValidator/>
    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="registerUserDto.FirstName" class="form-control" />
        <ValidationMessage For="@(()=> registerUserDto.FirstName)"/>
    </div>

    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="registerUserDto.LastName" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.LastName)" />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="registerUserDto.Email" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Email)" />
    </div>

    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="registerUserDto.Password" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Password)" />
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm Password</label>
        <InputText id="ConfirmPassword" @bind-Value="registerUserDto.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.ConfirmPassword)" />
    </div>

    <div class="form-group">
        <label for="Nationality">Nationality</label>
        <InputText id="Nationality" @bind-Value="registerUserDto.Nationality" class="form-control" />
        <ValidationMessage For="@(() => registerUserDto.Nationality)" />
    </div>

    <div class="form-group">
        <label for="DateOfBirth">DateOfBirth</label>
        <InputDate id="DateOfBirth" @bind-Value="registerUserDto.DateOfBirth" class="form-control" />
    </div>
    <div>
        <label for="numericDropdown">Select a number:</label>
        <InputSelect id="numericDropdown" @bind-Value="registerUserDto.RoleId">
            @for (int i = 1; i <= 3; i++)
            {
                <option value="@i">@i</option>
            }
        </InputSelect>
        <p>Selected Number: @registerUserDto.RoleId</p>
    </div>

    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
</EditForm>

@code {
    private RegisterUserDto registerUserDto = new RegisterUserDto();

    private async Task RegisterUser()
    {
        var response = await UserService.RegisterUser(registerUserDto);
        if(response == true)
        {
            Navigation.NavigateTo("/login");
        }
        
    }
}