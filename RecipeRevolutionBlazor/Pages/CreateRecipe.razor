@page "/createRecipe"
@using RecipeRevolutionBlazor.Models
@using RecipeRevolutionBlazor.Services.Recipes
@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager

<h3>Create Recipe</h3>

<EditForm Model="@recipeDto" OnValidSubmit="CreateRecipeMetod">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Name">Name:</label>
        <InputText id="Name" @bind-Value="@recipeDto.Name" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.Name)" />
    </div>

    <div class="form-group">
        <label for="Description">Description:</label>
        <InputText id="Description" @bind-Value="@recipeDto.Description" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.Description)" />
    </div>

    <div class="form-group">
        <label for="Name">Instructions:</label>
        <InputText id="Instructions" @bind-Value="@recipeDto.Instructions" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.Instructions)" />
    </div>

    <div class="form-group">
        <label for="Name">PreparationTime:</label>
        <InputNumber id="PreparationTime" @bind-Value="@recipeDto.PreparationTime" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.PreparationTime)" />
    </div>

    <div class="form-group">
        <label for="Name">DifficultyLevel:</label>
        <InputText id="DifficultyLevel" @bind-Value="@recipeDto.DifficultyLevel" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.DifficultyLevel)" />
    </div>

    <div class="form-group">
        <label for="Name">Portions:</label>
        <InputNumber id="Portions" @bind-Value="@recipeDto.Portions" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.Portions)" />
    </div>

    <div class="form-group">
        <label for="Name">Portions:</label>
        <InputNumber id="Portions" @bind-Value="@recipeDto.Portions" class="form-control" />
        <ValidationMessage For="@(() => recipeDto.Portions)" />
    </div>

    <div>
        <label for="numericDropdown">Select a number:</label>
        <InputSelect id="numericDropdown" @bind-Value="recipeDto.CategoryId">
            @for (int i = 1; i <= 3; i++)
            {
                <option value="@i">@i</option>
            }
        </InputSelect>
        <p>Selected Number: @recipeDto.CategoryId</p>
    </div>



    <button type="submit" class="btn btn-primary">Create</button>
    <a href="/Myrecipes" class="btn btn-secondary">Anuluj</a>
</EditForm>

@code {
    private CreateRecipeDto recipeDto = new CreateRecipeDto();

    private async Task CreateRecipeMetod()
    {
        try
        {
            await RecipeService.Create(recipeDto);
            NavigationManager.NavigateTo("/Myrecipes");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating recipe: {ex.Message}");
        }
    }
}