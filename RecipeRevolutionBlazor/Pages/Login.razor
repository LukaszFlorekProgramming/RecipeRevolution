@page "/login"
@using System.Net.Http
@using System.Net.Http.Json
@using RecipeRevolutionBlazor.Models
@using RecipeRevolutionBlazor.Services.Users
@inject IUserService UserService;
@inject NavigationManager Navigation;
@inject AuthTokenService AuthTokenService;

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <h3>Login</h3>

            <EditForm Model="@loginDto" OnValidSubmit="LoginUser">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="Email">Email</label>
                    <InputText id="Email" @bind-Value="loginDto.Email" class="form-control" />
                    <ValidationMessage For="@(() => loginDto.Email)" />
                </div>

                <div class="form-group">
                    <label for="Password">Password</label>
                    <InputText id="Password" type="password" @bind-Value="loginDto.Password" class="form-control" />
                    <ValidationMessage For="@(() => loginDto.Password)" />
                </div>

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginDto loginDto = new LoginDto();

    private async Task LoginUser()
    {
        try
        {
            var response = await UserService.LoginUser(loginDto);

            if (!string.IsNullOrEmpty(response))
            {
                AuthTokenService.SetToken(response);
                Navigation.NavigateTo("/Myrecipes");
                Console.WriteLine($"Token received: {response}");
            }
            else
            {
                Console.WriteLine("Login failed");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}