@page "/recipe/{id:int}"
@using RecipeRevolutionBlazor.Models
@using RecipeRevolutionBlazor.Services.Images
@using RecipeRevolutionBlazor.Services.Recipes
@inject IRecipeService IRecipeService
@inject IImageService ImageService
@inject NavigationManager NavigationManager



@if (recipe != null)
{
    <div class="recipe-container">
        <div class="row">
            <div class="col-md-6">
                <div class="recipe-header">
                    <h2>@recipe.Name</h2>
                </div>
                <div class="recipe-details">
                    <p><strong>Description:</strong> @recipe.Description</p>
                    <p><strong>Instructions:</strong> @recipe.Instructions</p>
                    <p><strong>Preparation Time:</strong> @recipe.PreparationTime</p>
                    <p><strong>Difficulty Level:</strong> @recipe.DifficultyLevel</p>
                    <p><strong>Portions:</strong> @recipe.Portions</p>
                    <button class="btn btn-secondary" @onclick="GoBack">Powrót</button>
                </div>
            </div>
            <div class="col-md-6">
                <img src="@($"data:image/png;base64,{Convert.ToBase64String(@image.Data)}")" alt="Recipe Image" class="recipe-image" />
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter] public int Id { get; set; }
    private RecipeDto recipe;
    private ImageDto image;
    protected override async Task OnInitializedAsync()
    {
        recipe = await IRecipeService.GetById(Id);
        image = await ImageService.GetByRecipeId(Id);
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/HomeRecipes");
    }
}
